"use strict";const Fs=require("fire-fs"),Path=require("fire-path");function onBeforeBuildFinish(e,t){Editor.warn("before-change-files");let i=Path.join(e.dest,"src/settings.js");Editor.warn(i),Fs.existsSync(i)?Editor.log("[before-change-files] 存在脚本!"):Editor.warn("[before-change-files] 不存在脚本:"+i),t()}module.exports={load(){},unload(){},dealPluginSourceCode(e){Editor.log("[CC-Inspector] 开始剔除插件脚本...");let t=Path.normalize(e.dest),i=Path.join(t,"src/settings.js");if(Fs.existsSync(i)){let e=!1,t=Editor.Profile.load("profile://project/cc-inspector.json");if(t&&t.data&&!0===t.data.isJoinBuild&&(e=!0),e)return void Editor.log("[CC-Inspector] 插件源码参与构建,无需修改:"+i);Editor.log("[CC-Inspector] 插件源码不参与构建,开始剔除插件源码.");let o=Fs.readFileSync(i,"utf-8"),r=require("vm");const n={window:{_CCSettings:null}};let s=new r.createContext(n),c=new r.Script(o).runInContext(s);if(c){let e=c.jsList;if(e){for(let t=0;t<e.length;){let i=e[t];-1===i.indexOf("cc-inspector-plugin")?t++:(Editor.log("[CC-Inspector] 剔除脚本:"+i),e.splice(t,1))}const t=Editor.require("packages://cc-inspector/node_modules/uglify-js");let o="window._CCSettings = "+JSON.stringify(c),r=t.parse(o),n=t.minify(r,{output:{beautify:!0,indent_start:0,indent_level:4}});n.error?Editor.error("error: "+n.error.message):n.code?(Fs.writeFileSync(i,n.code),Editor.log("[CC-Inspector] 剔除成功: "+i)):Editor.error("[CC-Inspector] 剔除失败!")}}else Editor.warn("[CC-Inspector] CCSettings 有问题!")}else Editor.warn("[CC-Inspector] 脚本文件不存在: "+i),e.encryptJs?Editor.warn("[CC-Inspector] 目前插件暂不支持脚本加密,详细解决方案: https://tidys.github.io/plugin-docs-oneself/docs/cc-inspector-v2/issue.html#%E6%9E%84%E5%BB%BA%E8%BF%87%E7%A8%8B%E6%8F%90%E7%A4%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8A%A0%E5%AF%86"):Editor.warn("[CC-Inspector] 剔除插件脚本发生错误,详细解决方案: https://tidys.github.io/plugin-docs-oneself/docs/cc-inspector-v2/issue.html#%E6%9E%84%E5%BB%BA%E8%BF%87%E7%A8%8B%E6%8F%90%E7%A4%BA%E5%89%94%E9%99%A4%E6%8F%92%E4%BB%B6%E8%84%9A%E6%9C%AC%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF")},messages:{openWinMain(){Editor.Panel.open("cc-inspector")},openWinPreview(){Editor.Panel.open("cc-inspector.preview-web")},openWinNodeInfo(){Editor.Panel.open("cc-inspector.info")},help(){Editor.Panel.open("cc-inspector.help")},set(){Editor.Panel.open("cc-inspector.set")},test(){Editor.Panel.open("cc-inspector.test")},"editor:build-start"(){},"editor:build-finished"(e,t){},"builder:state-changed"(e,t,i){},"builder:query-build-options"(){}}};