// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        amplitude: {value: 0.05}
        angularVelocity: {value: 10.0}
        frequency: {value: 10.0}
        offset: {value: 0.5}
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <cc-global>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif
  // 自定义属性
  uniform Properties {
    float amplitude;		// 振幅
    float angularVelocity;	// 角速度
    float frequency;		// 频率
    float offset;		// 偏距
  };

  void main () {
    vec4 o = vec4(1, 1, 1, 1);
    // 初相位（正值表现为向左移动，负值则表现为向右移动）
    // cc_time 是 Cocos Creator 提供的运行时间全局变量（类型：vec4）
    float initiaPhase = frequency * cc_time.x;
    float y = amplitude * sin(angularVelocity * v_uv0.x + initiaPhase) + offset;
    vec2 uv_real = vec2(v_uv0.x+cc_time.x, v_uv0.y+y);
    #if USE_TEXTURE
      CCTexture(texture, uv_real, o);
    #endif

    o *= v_color;

    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%
